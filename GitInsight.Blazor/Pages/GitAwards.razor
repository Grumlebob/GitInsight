@page "/GitAwards"
@using GitInsight.Blazor.Services
@inject IAnalysisService AnalysisService

<AuthorizeView>
    <NotAuthorized>
        <h1> You need to sign in</h1>
    </NotAuthorized>
    <Authorized>
        <TitleCard Title="Git Awards" />

     <RepoPathPicker OnChange="Load" Disabled="@_loading"></RepoPathPicker>

       @if (_loading)
              {
                  <div style="padding-top: 10px;">
        <RadzenCard Style="width: 400px;">
            <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Loading</RadzenText>
            <RadzenProgressBar  Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
        </RadzenCard>
       </div>
              }

        @if (_earlyBirdWinner != null)
        {
            <div class="row align-items-left justify-content-left" style="padding-right: 24vw">
                @if (_earlyBirdWinner.Value>0)
                {
                    <GitAward AwardWinner="@_earlyBirdWinner" AwardTitle="Early Bird" AwardDescription="Most commits in the time frame 06:00-10:00" ImageFileName="earlybird.jpg"></GitAward>
                }
                @if (_nightOwlWinner!.Value > 0)
                {
                    <GitAward AwardWinner="@_nightOwlWinner" AwardTitle="Night Owl" AwardDescription="Most commits in the time frame 00:00-06:00" ImageFileName="nightowl.jpg"></GitAward>
                }
            </div>
        }

    </Authorized>
</AuthorizeView>

@code {

    private GitAwardWinner? _earlyBirdWinner;
    private GitAwardWinner? _nightOwlWinner;
    private bool _loading;

    private async Task GetRepo()
    {
        _loading = true;
        _earlyBirdWinner = await AnalysisService.EarlyBird(RepoPathContainer.PickedRepositoryPath!);
        _nightOwlWinner = await AnalysisService.NightOwl(RepoPathContainer.PickedRepositoryPath!);
        _loading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        if (RepoPathContainer.PickedRepositoryPath != null) await GetRepo();
    }

}
