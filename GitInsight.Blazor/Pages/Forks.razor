@page "/Forks"
@using GitInsight.Blazor.Services
@inject IAnalysisService AnalysisService


<AuthorizeView>
    <NotAuthorized>
        <h1> You need to sign in</h1>
    </NotAuthorized>
    <Authorized>
        <TitleCard Title="Forks"/>
        <RepoPathPicker OnChange="Load" Disabled="@_loading"></RepoPathPicker>
        @if (_loading)
        {
            <RadzenCard Style="width: 400px;" class="mb-1">
                <RadzenText TextStyle="TextStyle.Subtitle2" TagName="TagName.H3">Loading</RadzenText>
                <RadzenProgressBar Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate"/>
            </RadzenCard>
        }

        @if (_forksGiven == null)
        {
        }
        else if (!_forksGiven.Any())
        {
            <p>@RepoPathContainer.PickedRepositoryPath does not have any forks</p>
        }
        else
        {
            <RadzenDataList TItem="ForkDto" Data="@_forksGiven" WrapItems="true">
                <Template Context="fork">
                    <ForkCard Fork="@fork"/>
                </Template>
            </RadzenDataList>
        }
    </Authorized>
</AuthorizeView>

@code {
    private bool _loading;

    IEnumerable<ForkDto>? _forksGiven;

    async Task GetForks()
    {
        _loading = true;
        try
        {
            _forksGiven = await AnalysisService.GetForksFromApi(RepoPathContainer.PickedRepositoryPath!);
        }
        catch (HttpRequestException)
        {
            _forksGiven = null;
        }
        _loading = false;
    }

    protected override async Task OnInitializedAsync()
    {
        await Load();
    }

    private async Task Load()
    {
        if (RepoPathContainer.PickedRepositoryPath != null) await GetForks();
    }

}
